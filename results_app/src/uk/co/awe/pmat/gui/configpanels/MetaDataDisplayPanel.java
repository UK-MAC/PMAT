package uk.co.awe.pmat.gui.configpanels;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import uk.co.awe.pmat.db.DatabaseException;
import uk.co.awe.pmat.db.DatabaseManager;
import uk.co.awe.pmat.db.MetaData;
import uk.co.awe.pmat.db.MetaData.Type;
import uk.co.awe.pmat.gui.ExceptionDialog;
import uk.co.awe.pmat.gui.GuiPanel;
import uk.co.awe.pmat.gui.models.MetaDataDisplayModel;

/**
 * A panel to display all the stored objects of different {@link MetaData} types
 * in a table.
 * 
 * @author AWE Plc copyright 2013
 */
public class MetaDataDisplayPanel extends GuiPanel {

	private static final Logger LOG = LoggerFactory
			.getLogger(MetaDataDisplayPanel.class);

	private final MetaData.Type configPanelType;
	private final MetaDataDisplayModel configDataModel;

	/**
	 * Create a new {@code MetaDataDisplayPanel}.
	 * 
	 * @param configPanelType
	 *            the type of the panel to display.
	 * @param configDataModel
	 *            the model driving this panel.
	 * @param changeListener
	 *            a {@code ChangeListener} to be informed whenever the selected
	 *            meta data changes.
	 */
	public MetaDataDisplayPanel(final MetaData.Type configPanelType,
			final MetaDataDisplayModel configDataModel,
			final ChangeListener changeListener) {
		initComponents();

		this.configPanelType = configPanelType;
		this.configDataModel = configDataModel;

		displayTable.getSelectionModel().addListSelectionListener(
				new ListSelectionListener() {
					@Override
					public void valueChanged(ListSelectionEvent e) {
						changeListener.stateChanged(new ChangeEvent(this));
					}
				});

		populateDisplayTable();
	}

	@Override
	public void stateChanged(ChangeEvent e) {
		populateDisplayTable();
	}

	/**
	 * Update the display table.
	 */
	private void populateDisplayTable() {
		displayTable.setModel(configDataModel.getTableModel(configPanelType));
	}

	/**
	 * Returns the meta-data type associated with this panel.
	 * 
	 * @return the meta-data type.
	 */
	Type getType() {
		return configPanelType;
	}

	/**
	 * Returns the currently selected meta-data in the table.
	 * 
	 * @return the meta-data for the selected row, or {@code null} if no row is
	 *         currently selected.
	 */
	MetaData getSelectedMetaData() {
		int rowIdx = displayTable.getSelectedRow();
		rowIdx = displayTable.convertRowIndexToModel(rowIdx);
		return configDataModel.getSelectedMetaData(configPanelType, rowIdx);
	}

	/**
	 * Delete the meta-data corresponding to the currently selected table row.
	 */
	void deleteSelectedMetaData() {
		try {
			int rowIdx = displayTable.getSelectedRow();
			rowIdx = displayTable.convertRowIndexToModel(rowIdx);
			final MetaData metaData = configDataModel.getSelectedMetaData(
					configPanelType, rowIdx);
			DatabaseManager.getConnection().delete(metaData);
		} catch (DatabaseException ex) {
			ExceptionDialog.showDatabaseExceptionDialog(ex);
		}
	}

	/**
	 * This method is called from within the constructor to initialise the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		setMinimumSize(new java.awt.Dimension(422, 223));

		jScrollPane1.setName("jScrollPane1"); // NOI18N

		displayTable.setName("displayTable"); // NOI18N
		jScrollPane1.setViewportView(displayTable);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422,
				Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 223,
				Short.MAX_VALUE));
	}// </editor-fold>//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private final javax.swing.JTable displayTable = new uk.co.awe.pmat.gui.utils.DisplayTable();
	private final javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
	// End of variables declaration//GEN-END:variables

}
