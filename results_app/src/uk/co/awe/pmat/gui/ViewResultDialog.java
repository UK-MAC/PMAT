package uk.co.awe.pmat.gui;

import java.awt.Component;
import java.awt.GridLayout;
import java.awt.Window;
import java.beans.PropertyChangeListener;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;
import uk.co.awe.pmat.db.DatabaseException;
import uk.co.awe.pmat.gui.models.analysis.ViewResultDialogModel;
import uk.co.awe.pmat.utils.Pair;

/**
 * A dialog to display an individual result.
 * 
 * @author AWE Plc copyright 2013
 */
final class ViewResultDialog extends JDialog {

	/**
	 * Open a dialog showing the result specified by the given model.
	 * 
	 * @param parent
	 *            the parent component used to choose the location for this
	 *            dialog on the screen.
	 * @param model
	 *            the model driving this dialog.
	 * @param taskListener
	 *            a listener to be informed of any background tasks.
	 */
	static void showResultDialog(Component parent, ViewResultDialogModel model,
			PropertyChangeListener taskListener) {

		Window window = SwingUtilities.getWindowAncestor(parent);

		ViewResultDialog diag = null;

		try {
			diag = new ViewResultDialog(window, model, taskListener);
		} catch (DatabaseException ex) {
			ExceptionDialog.showDatabaseExceptionDialog(ex);
			return;
		}

		diag.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);

		// Move to the centre of the main frame.
		diag.setLocation(window.getX() + window.getWidth() / 2
				- diag.getWidth() / 2, window.getY() + window.getHeight() / 2
				- diag.getHeight() / 2);

		diag.setVisible(true);
	}

	/**
	 * Create a new {@code ViewResultDialog}.
	 * 
	 * @param parent
	 *            the dialog's parent.
	 * @param model
	 *            the model driving this dialog.
	 * @param taskListener
	 *            a listener to be informed of any background tasks.
	 * @throws DatabaseException
	 *             if an error occurs retrieving the result data from the
	 *             database.
	 */
	private ViewResultDialog(Window parent, final ViewResultDialogModel model,
			PropertyChangeListener taskListener) throws DatabaseException {
		super(parent, "View Result", ModalityType.MODELESS);
		initComponents();

		final List<Pair<String, String>> infoList = model.getRunInfo();
		labelPanel.setLayout(new GridLayout(infoList.size(), 1));
		fieldPanel.setLayout(new GridLayout(infoList.size(), 1));

		for (Pair<String, String> info : infoList) {
			labelPanel.add(new JLabel(info.getFirst()));
			fieldPanel.add(new JLabel(info.getSecond()));
		}

		final SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
			private DefaultTableModel tableModel;

			@Override
			protected Void doInBackground() throws Exception {
				try {
					tableModel = model.getResultDataTableModel();
				} catch (Exception ex) {
					ExceptionDialog.showExceptionDialog(ex,
							"Error creating results table");
				}
				return null;
			}

			@Override
			protected void done() {
				if (tableModel != null) {
					dataTable.setModel(tableModel);
					dataTable.getColumnModel().getColumn(0).setMaxWidth(60);
				}
			}
		};
		worker.addPropertyChangeListener(taskListener);
		worker.execute();
	}

	/**
	 * This method is called from within the constructor to initialise the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		infoPanel.setLayout(new java.awt.GridBagLayout());

		labelPanel.setLayout(new java.awt.GridLayout(4, 1));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		infoPanel.add(labelPanel, gridBagConstraints);

		fieldPanel.setLayout(new java.awt.GridLayout(4, 1));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		infoPanel.add(fieldPanel, gridBagConstraints);

		getContentPane().add(infoPanel, java.awt.BorderLayout.NORTH);

		dataTable.setAutoCreateRowSorter(true);
		dataScroll.setViewportView(dataTable);

		getContentPane().add(dataScroll, java.awt.BorderLayout.CENTER);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private final javax.swing.JScrollPane dataScroll = new javax.swing.JScrollPane();
	private final javax.swing.JTable dataTable = new javax.swing.JTable();
	private final javax.swing.JPanel fieldPanel = new javax.swing.JPanel();
	private final javax.swing.JPanel infoPanel = new javax.swing.JPanel();
	private final javax.swing.JPanel labelPanel = new javax.swing.JPanel();
	// End of variables declaration//GEN-END:variables

}
