package uk.co.awe.pmat.gui.analysis;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import uk.co.awe.pmat.db.Rank;
import uk.co.awe.pmat.db.Restriction;
import uk.co.awe.pmat.db.Value;
import uk.co.awe.pmat.db.criteria.Category;
import uk.co.awe.pmat.db.criteria.Comparator;
import uk.co.awe.pmat.gui.GuiPanel;
import uk.co.awe.pmat.gui.models.DataFilterModel;

/**
 * A panel to display a stack of {@link DataFilterPanel}s in order to display a
 * list of {@link Restriction}s and to allow {@link Restriction}s to be
 * added/removed from the list.
 * 
 * @author AWE Plc copyright 2013
 */
public final class DataFilterListPanel extends GuiPanel {

	private final DataFilterModel model;

	private DataFilterPanel currentPanel = null;

	@Override
	public void stateChanged(ChangeEvent e) {
		updatePanels();
	}

	/**
	 * The {@code Action} to perform to remove a restriction from the list.
	 */
	private final class RemoveAction extends AbstractAction {
		private final int panelIdx;

		/**
		 * Create a new {@code RemoveAction}.
		 * 
		 * @param panelIdx
		 *            the index of the panel to remove when this action is
		 *            performed.
		 */
		RemoveAction(int panelIdx) {
			this.panelIdx = panelIdx;
		}

		@Override
		public void actionPerformed(ActionEvent e) {
			model.removeRestriction(panelIdx);
		}
	}

	/**
	 * The {@code Action} to perform to add a restriction to the list.
	 */
	private final AbstractAction addAction = new AbstractAction() {
		@Override
		public void actionPerformed(ActionEvent e) {
			final Category category = currentPanel.getSelectedCategory();
			final String field = currentPanel.getSelectedField();
			final Rank rank = currentPanel.getSelectedRank();
			final Comparator comparator = currentPanel.getSelectedCompartor();
			final Value<?> value = currentPanel.getSelectedValue();
			model.addRestriction(category, field, rank, comparator, value);
		}
	};

	/**
	 * Creates new form {@code DataFilterListPanel}.
	 * 
	 * @param model
	 *            the model driving this panel.
	 */
	public DataFilterListPanel(final DataFilterModel model) {
		initComponents();
		this.model = model;
		model.addChangeListener((ChangeListener) this);
		updatePanels();
	}

	/**
	 * Recreate the {@code DataFilterPanel}s.
	 */
	private void updatePanels() {
		criteriaPanels.removeAll();
		int panelIdx = 0;
		for (Restriction restriction : model.getRestrictions()) {
			final JPanel filterPanel = new DataFilterPanel(model, restriction,
					new RemoveAction(panelIdx));
			criteriaPanels.add(filterPanel);
			++panelIdx;
		}
		currentPanel = new DataFilterPanel(model, addAction);
		criteriaPanels.add(currentPanel);
	}

	/**
	 * This method is called from within the constructor to initialise the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		setLayout(new javax.swing.BoxLayout(this,
				javax.swing.BoxLayout.LINE_AXIS));

		criteriaPanelGroup.setLayout(new java.awt.GridBagLayout());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		criteriaPanelGroup.add(spacer, gridBagConstraints);

		criteriaPanels.setLayout(new javax.swing.BoxLayout(criteriaPanels,
				javax.swing.BoxLayout.PAGE_AXIS));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		criteriaPanelGroup.add(criteriaPanels, gridBagConstraints);

		criteriaScroll.setViewportView(criteriaPanelGroup);

		add(criteriaScroll);
	}// </editor-fold>//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private final javax.swing.JPanel criteriaPanelGroup = new javax.swing.JPanel();
	private final javax.swing.JPanel criteriaPanels = new javax.swing.JPanel();
	private final javax.swing.JScrollPane criteriaScroll = new javax.swing.JScrollPane();
	private final javax.swing.JPanel spacer = new javax.swing.JPanel();
	// End of variables declaration//GEN-END:variables

}
