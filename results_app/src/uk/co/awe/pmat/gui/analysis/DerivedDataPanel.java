package uk.co.awe.pmat.gui.analysis;

import java.io.StringReader;
import javax.swing.event.ChangeEvent;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import uk.co.awe.pmat.deriveddata.DerivedData;
import uk.co.awe.pmat.deriveddata.DerivedDataParser;
import uk.co.awe.pmat.deriveddata.InvalidArgumentsException;
import uk.co.awe.pmat.deriveddata.ParseException;
import uk.co.awe.pmat.deriveddata.TokenMgrError;
import uk.co.awe.pmat.gui.GuiPanel;
import uk.co.awe.pmat.gui.models.DerivedDataModel;

/**
 * A panel which allows for the creation of new data fields via a free text
 * formula box, parsed using a {@link DerivedDataParser}.
 * 
 * @author AWE Plc copyright 2013
 */
public final class DerivedDataPanel extends GuiPanel {

	private static final String DEFAULT_VAR_NAME = "New Variable";

	private final DerivedDataModel derivedDataModel;

	private DerivedData parsedText;

	/**
	 * Create a new {@code DerivedDataPanel}.
	 * 
	 * @param derivedDataModel
	 *            the model driving this panel.
	 */
	public DerivedDataPanel(final DerivedDataModel derivedDataModel) {
		initComponents();

		this.derivedDataModel = derivedDataModel;

		insertVariableSelection.setModel(derivedDataModel
				.getVariableComboBoxModel());
		insertFunctionSelection.setModel(derivedDataModel
				.getFunctionComboBoxModel());
		insertPropertySelection.setModel(derivedDataModel
				.getPropertyComboBoxModel());

		variableNameSelection.setModel(derivedDataModel
				.getNewVarsComboBoxModel());
		variableNameSelection.setEditable(true);
		variableNameSelection.setSelectedItem(DEFAULT_VAR_NAME);

		variableFormulaText.setDocument(derivedDataModel
				.getVariableFormulaDocument());
		variableFormulaText.getDocument().addDocumentListener(
				new DocumentListener() {
					@Override
					public void insertUpdate(DocumentEvent e) {
						parseFormula();
					}

					@Override
					public void removeUpdate(DocumentEvent e) {
						parseFormula();
					}

					@Override
					public void changedUpdate(DocumentEvent e) {
						parseFormula();
					}
				});

		parsedText = null;
	}

	@Override
	public void stateChanged(ChangeEvent e) {
	}

	/**
	 * Parse the text currently entered in the formula text field. Any errors
	 * that occur during the parsing are reported in the {@code errorLabel}
	 * label.
	 */
	private void parseFormula() {
        errorLabel.setText(" ");
        try {
            String varFormula = variableFormulaText.getText().trim();
            if (varFormula.isEmpty()) { return; }

            DerivedDataParser parser =
                    derivedDataModel.getParser(new StringReader(varFormula));
            parsedText = parser.parse();
        } catch (ParseException | InvalidArgumentsException | TokenMgrError ex) {
            errorLabel.setText(ex.getMessage());
        }
    }

	/**
	 * This method is called from within the constructor to initialise the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		setLayout(new java.awt.GridBagLayout());

		insertVariableSelection
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						insertVariableSelectionActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
		add(insertVariableSelection, gridBagConstraints);

		variableFormulaText.setColumns(20);
		variableFormulaText.setRows(2);
		variableFormulaScroll.setViewportView(variableFormulaText);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		add(variableFormulaScroll, gridBagConstraints);

		insertVariableLabel.setText("Insert Variable:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		add(insertVariableLabel, gridBagConstraints);

		variableNameLabel.setText("New Variable:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		add(variableNameLabel, gridBagConstraints);

		errorLabel.setForeground(java.awt.Color.red);
		errorLabel.setText(" ");
		errorLabel.setPreferredSize(new java.awt.Dimension(0, 20));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.gridwidth = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		add(errorLabel, gridBagConstraints);

		insertFunctionLabel.setText("Insert Function:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		add(insertFunctionLabel, gridBagConstraints);

		insertFunctionSelection
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						insertFunctionSelectionActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
		add(insertFunctionSelection, gridBagConstraints);

		variableNameSelection
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						variableNameSelectionActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
		add(variableNameSelection, gridBagConstraints);

		buttonPanel.setLayout(new java.awt.GridLayout(1, 2, 5, 0));

		saveButton.setText("Save");
		saveButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				saveButtonActionPerformed(evt);
			}
		});
		buttonPanel.add(saveButton);

		deleteButton.setText("Delete");
		deleteButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				deleteButtonActionPerformed(evt);
			}
		});
		buttonPanel.add(deleteButton);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
		add(buttonPanel, gridBagConstraints);

		insertPropertySelection
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						insertPropertySelectionActionPerformed(evt);
					}
				});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
		add(insertPropertySelection, gridBagConstraints);

		insertPropertyLabel.setText("Insert Property:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		add(insertPropertyLabel, gridBagConstraints);
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * Function called when the "Insert Variable" combo box item is changed.
	 * 
	 * @param evt
	 *            the selection event.
	 */
	private void insertVariableSelectionActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_insertVariableSelectionActionPerformed
		variableFormulaText.insert("'"
				+ (String) insertVariableSelection.getSelectedItem() + "'",
				variableFormulaText.getCaretPosition());
		variableFormulaText.requestFocus();
	}// GEN-LAST:event_insertVariableSelectionActionPerformed

	/**
	 * Function called when the "Insert Function" combo box item is changed.
	 * 
	 * @param evt
	 *            the selection event.
	 */
	private void insertFunctionSelectionActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_insertFunctionSelectionActionPerformed
		variableFormulaText.insert((String) insertFunctionSelection
				.getSelectedItem()
				+ "(  )", variableFormulaText.getCaretPosition());
		variableFormulaText.setCaretPosition(variableFormulaText
				.getCaretPosition() - 2);
		variableFormulaText.requestFocus();
	}// GEN-LAST:event_insertFunctionSelectionActionPerformed

	/**
	 * Function called when the "Save" button is clicked.
	 * 
	 * @param evt
	 *            the click event.
	 */
	private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveButtonActionPerformed
		String varName = (String) variableNameSelection.getSelectedItem();
		if (varName.isEmpty()) {
			errorLabel.setText("Cannot create variable with no name");
			return;
		}

		derivedDataModel.setDerivedData(varName, variableFormulaText.getText(),
				parsedText);
		variableFormulaText.setText("");
	}// GEN-LAST:event_saveButtonActionPerformed

	/**
	 * Function called when the "Delete" button is clicked.
	 * 
	 * @param evt
	 *            the click event.
	 */
	private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteButtonActionPerformed
		String varName = (String) variableNameSelection.getSelectedItem();
		derivedDataModel.removeDerivedData(varName);

		variableFormulaText.setText("");
	}// GEN-LAST:event_deleteButtonActionPerformed

	/**
	 * Function called when the "New Variable" combo box item is changed.
	 * 
	 * @param evt
	 *            the selection event.
	 */
	private void variableNameSelectionActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_variableNameSelectionActionPerformed
		String varName = (String) variableNameSelection.getSelectedItem();
		variableFormulaText.setText(derivedDataModel
				.getDerivedDataEquation(varName));
	}// GEN-LAST:event_variableNameSelectionActionPerformed

	/**
	 * Function called when the "Insert Property" combo box item is changed.
	 * 
	 * @param evt
	 *            the selection event.
	 */
	private void insertPropertySelectionActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_insertPropertySelectionActionPerformed
		variableFormulaText.insert((String) insertPropertySelection
				.getSelectedItem(), variableFormulaText.getCaretPosition());
		variableFormulaText.requestFocus();
	}// GEN-LAST:event_insertPropertySelectionActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private final javax.swing.JPanel buttonPanel = new javax.swing.JPanel();
	private final javax.swing.JButton deleteButton = new javax.swing.JButton();
	private final javax.swing.JLabel errorLabel = new javax.swing.JLabel();
	private final javax.swing.JLabel insertFunctionLabel = new javax.swing.JLabel();
	private final javax.swing.JComboBox<String> insertFunctionSelection = new javax.swing.JComboBox<String>();
	private final javax.swing.JLabel insertPropertyLabel = new javax.swing.JLabel();
	private final javax.swing.JComboBox<String> insertPropertySelection = new javax.swing.JComboBox<String>();
	private final javax.swing.JLabel insertVariableLabel = new javax.swing.JLabel();
	private final javax.swing.JComboBox<String> insertVariableSelection = new javax.swing.JComboBox<String>();
	private final javax.swing.JButton saveButton = new javax.swing.JButton();
	private final javax.swing.JScrollPane variableFormulaScroll = new javax.swing.JScrollPane();
	private final javax.swing.JTextArea variableFormulaText = new javax.swing.JTextArea();
	private final javax.swing.JLabel variableNameLabel = new javax.swing.JLabel();
	private final javax.swing.JComboBox<String> variableNameSelection = new javax.swing.JComboBox<String>();
	// End of variables declaration//GEN-END:variables

}
