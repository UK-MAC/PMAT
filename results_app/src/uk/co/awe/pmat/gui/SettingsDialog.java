package uk.co.awe.pmat.gui;

import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.table.DefaultTableModel;
import uk.co.awe.pmat.Configuration;

/**
 * A dialog box to allow the setting of application settings.
 * 
 * @author AWE Plc copyright 2013
 */
final class SettingsDialog extends javax.swing.JDialog {

	/**
	 * A table model to show the application settings and allow the saving of
	 * the values shown.
	 */
	private class SettingsTableModel extends DefaultTableModel {
		private final Configuration.Key[] keys = new Configuration.Key[] {
				Configuration.Key.WEB_BROWSER, Configuration.Key.FILE_EDITOR, };

		/**
		 * Create a new {@code SettingsTableModel}.
		 */
		SettingsTableModel() {
			super(new String[] { "Name", "Value" }, 0);
			for (Configuration.Key key : keys) {
				addRow(new Object[] { key.toString(), config.getProperty(key) });
			}
		}

		@Override
		public boolean isCellEditable(int row, int column) {
			return (column == 1);
		}

		/**
		 * Save the settings.
		 */
		void saveValues() {
			int keyIdx = 0;
			for (Object obj : getDataVector()) {
				List<?> list = (List<?>) obj;
				Configuration.Key key = keys[keyIdx++];
				config.setProperty(key, (String) list.get(1));
			}
		}
	}

	private final Configuration config;
	private final SettingsTableModel tableModel;

	/**
	 * Create a new {@code SettingsDialog}.
	 * 
	 * @param parent
	 *            the parent of the dialog.
	 * @param modal
	 *            {@code true} if this dialog should be model, {@code false}
	 *            otherwise.
	 * @param config
	 *            the application configuration.
	 */
	SettingsDialog(Frame parent, boolean modal, Configuration config) {

		super(parent, "Application Settings", modal);
		this.config = config;
		initComponents();

		tableModel = new SettingsTableModel();
		settingsTable.setModel(tableModel);

		closeButton.setAction(new AbstractAction("Close") {
			@Override
			public void actionPerformed(ActionEvent e) {
				tableModel.saveValues();
				setVisible(false);
			}
		});

		final int parentCentreX = parent.getX() + parent.getWidth() / 2;
		final int perentCentreY = parent.getY() + parent.getHeight() / 2;

		final int x = parentCentreX - this.getWidth() / 2;
		final int y = perentCentreY - this.getHeight() / 2;

		this.setLocation(x, y);
	}

	/**
	 * This method is called from within the constructor to initialise the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		getContentPane().setLayout(new java.awt.GridBagLayout());

		closeButton.setText("Close");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 2;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
		getContentPane().add(closeButton, gridBagConstraints);

		settingsScroll.setViewportView(settingsTable);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridwidth = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		getContentPane().add(settingsScroll, gridBagConstraints);

		spacer.setMinimumSize(new java.awt.Dimension(0, 0));
		spacer.setPreferredSize(new java.awt.Dimension(0, 0));

		javax.swing.GroupLayout spacerLayout = new javax.swing.GroupLayout(
				spacer);
		spacer.setLayout(spacerLayout);
		spacerLayout.setHorizontalGroup(spacerLayout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 326,
				Short.MAX_VALUE));
		spacerLayout.setVerticalGroup(spacerLayout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGap(0, 30,
				Short.MAX_VALUE));

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		getContentPane().add(spacer, gridBagConstraints);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private final javax.swing.JButton closeButton = new javax.swing.JButton();
	private final javax.swing.JScrollPane settingsScroll = new javax.swing.JScrollPane();
	private final javax.swing.JTable settingsTable = new javax.swing.JTable();
	private final javax.swing.JPanel spacer = new javax.swing.JPanel();
	// End of variables declaration//GEN-END:variables

}
